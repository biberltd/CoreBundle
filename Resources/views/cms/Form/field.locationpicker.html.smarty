{*
INFO:
=============================================================================
Name:           cms/Form/field.locationpicker.html.smarty
Author:         Can Berkol
Version:        1.0.0
Date:           25.03.2014

Description:    This template is used to create a Google Maps Based location picker

PARAMETERS:
=============================================================================
$field                  array       main container
    .classes            array       that holds a list of classes to be used.
    .id                 string      id attribute
    .lbl                string      field label
    .name               string      name attribute
    .settings           array       that contain view settings
        .defaultLocationarray       default location
        .showLabel      bool        true, false |Switches the label on or off
        .wrapInRow      bool        true, false
    .size               integer     1,2,4,6,12 see bootstrap documentation for more details.

*}
{if $field.settings.wrapInRow}
    <div class="form-row clearfix{if isset($field.settings.rowSize)} span{$field.settings.rowSize}{/if}">
{/if}
    {if $field.settings.showLabel}
        <label for="{$field.id}">{$field.lbl}</label>
    {/if}
        <div id="{$field.id}">
            {if $field.settings.searchEnabled}
            <input type="text" id="{$field.id}-address" style="width: 98%" name="{$field.name}_address" value="{$field.settings.defaultLocation.address}" />
            {/if}
            <div id="{$field.id}-map" style="width: 100%; height: {$field.settings.height};"></div>
            <input type="hidden" id="{$field.id}-lat" name="{$field.name}_lat" value="{$field.settings.defaultLocation.lat}">
            <input type="hidden" id="{$field.id}-lon" name="{$field.name}_lon" value="{$field.settings.defaultLocation.lon}">
        </div>
{if $field.settings.wrapInRow}
    </div>
{/if}
<script type="text/javascript">
    $('#{$field.id}-map').locationpicker({
        location: { latitude: {$field.settings.defaultLocation.lat}, longitude: {$field.settings.defaultLocation.lon} },
        zoom: {$field.settings.zoom},
        scrollwheel: {$field.settings.scrollWheel},
        radius: {$field.settings.radius},
        inputBinding: {
            latitudeInput: $('#{$field.id}-lat'),
            longitudeInput: $('#{$field.id}-lon'),
            locationNameInput: $('#{$field.id}-address')
        },
        enableAutocomplete: {$field.settings.autoComplete},
        enableReverseGeocode: {$field.settings.reverseGeocode}
    });
</script>