{*
    INFO:
    =============================================================================
    Name:           cms/Modules/widget.datatable.html.smarty
    Author:         Can Berkol
    Version:        1.0.1
    Date:           06.05.2014

    Description:    This template is used to create data lists/tables.

    PARAMETERS:
    =============================================================================
    $module                 array       Main container
        .code               string      A timestamp based unique code to prevent issues on using this widget multiple times at a single page.
        .data               array       Holds a data definitions which will populate the table.
            .headers        array       Holds definitions of column headers.
                .code       string      A unique code of column must be equal to object properties of data items.
                .name       string      Localized name for each given column
            .items          array       Holds a list of stdClass items with properties matching header codes.
            .options        array       Collection of arrays with key => value pairs.
                .name       string      Selectbox option name.
                .value      string      Selectbox option value.
        .settings           array       Holds a list of settings
            .ajax           bool        Use ajax to load data? true, false
            .column         array       Stores data column settings
                .width      string      Column width.
            .editable       bool        Is multi editing enabled? true, false
            .info           bool        Show info? true, false
            .filter         bool        Show filter? true, false
            .lengthChange   bool        Show dropbox for the number of items to be shown? true, false
            .link           array       Stores controllers to be used.
                .order      string      URL to save rowreordering data to database.
                .source     string      URL to load data from. URL must return a JSON object.
            .method         string      Form processing method for ajax calls, POST, GET
            .orderWithAjax  bool        Rowreordering save with AJAX? true, false
            .paginate       bool        Show pagination? true, false
            .paginationType string      bootstrap, full_numbers, two_button
            .processing     bool        Show processing/loading indicator? true, false
            .row            array       Holds row settings
                .count      integer     see datatables.net documentation
                .show       integer     see datatables.net documentation
                .start      integer     see datatables.net documentation
            .rowReordering  bool        Enable drag and drop reordering? false, true
            .sorting        bool        Enable column sorting? true, false
            .state          bool        Save last state to cookie? true, false
            .table          array       Holds table settings.
                .height     string      Table height
                .scrollCollapse bool        Disregard table.height setting for small data sets? true, false
                .width      string      Table width
            .viewport       bool        Limit viewport? false, true. If set to true sScrollY and SScrollX must be supplied.
        .tabIndex           integer     A numeric tabindex value for keyboard controls. Default: 88788
        .txt
            .txt.btn        array       Holds localization of button names.
                .edit       string      Edit button
            .txt.lbl        array       Module label localizations.
                .find       string
                .first      string
                .info       string
                .last       string
                .limit      string
                .next       string
                .prev       string
                .processing string
                .recordNotFound string
                .noRecords  string
                .numberOfRecords string
        .title              string      Module title / header.
*}
<div class="row-fluid">
    <div class="span12">
        <!-- Dynamic Table -->
        <div class="widget" id="widget-{$module.code}">
            <div class="widget-title clearfix">
                {if $module.settings.editable}
                    <span class="icon-title">
                    <input type="checkbox" id="frm_title_check" name="frm_title_check" />
                </span>
                {/if}
                <h6>{$module.title}</h6>
            </div>
            <table id="table-{$module.code}" cellpadding="0" cellspacing="0" border="0" class="display table-dynamic{if $module.settings.editable} s-checkable{/if}">
                <thead>
                <tr>
                    {if $module.settings.editable}
                        <th></th>
                    {/if}
                    {foreach $module.data.headers as $header}
                        <th>{$header.name}</th>
                    {/foreach}
                </tr>
                </thead>
                <tbody>
                {foreach $module.data.items as $item}
                    <tr class="gradeA">
                        {if $module.settings.editable}
                            <td><input name="checkRow" type="checkbox"{if isset($item->DbId)} value="{$item->DbId}"{/if} class="multi-action" id="titleCheck-{$module.code}-{if isset($item->DbId)}{$item->DbId}{else}{$item@iteration}{/if}"/></td>
                        {/if}
                        {foreach $module.data.headers as $header}
                            <td>{$item->$header.code}</td>
                        {/foreach}
                    </tr>
                {/foreach}
                </tbody>
            </table>
            <div class="form-actions">
                {if $module.settings.editable}
                    <select id="action-select-{$module.code}" name="selecteditems">
                        {foreach $module.data.options as $option}
                            <option value="{$option.value}">{$option.name}</option>
                        {/foreach}
                    </select>
                    <button id="action-submit-{$module.code}" type="submit" disabled class="btn btn-primary disabled submit-button"{if isset($module.data.modals)}{foreach $module.data.modals as $modal}{if $modal@first}data-toggle="modal" data-target="#modal-{$module.code}-{$modal.id}{/if}{/foreach}"{/if}>{$module.txt.btn.edit}</button>
                {/if}
            </div>
        </div>
    </div>
</div>
{if isset($module.data.modals)}
    {foreach $module.data.modals as $modal}
        <div class="modal fade" id="modal-{$module.code}-{$modal.id}" role="dialog" aria-labelledby="modalLabel-{$module.code}-{$modal.id}" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h3 class="modal-title" id="modalLabel-{$module.code}-{$modal.id}">{$modal.title}</h3>
                    </div>
                    <div class="modal-body">
                        <p>{$modal.msg}</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">{$modal.btn.cancel}</button>
                        <button id="modal-{$module.code}-{$modal.id}-confirm" type="button" class="btn btn-primary">{$modal.btn.confirm}</button>
                    </div>
                </div>
            </div>
        </div>
    {/foreach}
{/if}
<script type="text/javascript">
    {if isset($module.data.modals)}
    {foreach $module.data.modals as $modal}
    $(document).ready(function(){
        $("#action-select-{$module.code}").change(function(){
            $(this).next('button').attr('data-target', "#modal-{$module.code}-"+$(this).val());
        });
        $('#modal-{$module.code}-{$modal.id}-confirm').on('click', function(e){
            e.preventDefault();
            var ids = '';
            $('.multi-action:checked').each(function(){
                ids = ids + ',' + $(this).val();
            });
            $('#modal-form-data').val(ids);
            {if isset($modal.action)}
            $('#modal-form').attr('action', '{$modal.action}/'+ $("#action-select-{$module.code}").val());
            {/if}
            $('#modal-form').submit();
        });
    });
    {/foreach}
    {/if}
    {if $module.settings.editable}
    /* Multi Select Checkbox */
    $('.multi-action').removeAttr('checked');
    $('#frm_title_check').removeAttr('checked');
    $('#action-submit-{$module.code}').attr('disabled', '');

    $('.multi-action').on('click', function(){
        if($('.multi-action:checked').length > 0) {
            $('#action-submit-{$module.code}').removeAttr('disabled').removeClass('disabled');
        }
        else{
            $('#frm_title_check').removeAttr('checked');
            $('#action-submit-{$module.code}').attr('disabled','').addClass('disabled');
        }
    });
    $('#frm_title_check').on('change', function(){
        if($('.multi-action:checked').length > 0) {
            $('#action-submit-{$module.code}').removeAttr('disabled').removeClass('disabled');
        }
        else{
            $('#action-submit-{$module.code}').attr('disabled','').addClass('disabled');
        }
    });
    $("#widget-{$module.code} .icon-title input:checkbox").click(function() {
        var checkedStatus = this.checked;
        $(this).parents('.widget').find('table.s-checkable tbody tr td:first-child input:checkbox').each(function() {
            this.checked = checkedStatus;
        });
    });
    $('#action-select-{$module.code}').change(function(){
        $('#action-submit-{$module.code}').attr('data-target', '#'+$(this).val());
    });
    {/if}
    /* Dynamic tables */
    oTable = $('#table-{$module.code}.table-dynamic').dataTable({
        /** @todo sDom customization */
        "sDom": '<""l>t<"table-dynamic-footer clearfix"fp>',
        "aaSorting": {$module.settings.sortingDefault},
        "oLanguage" :
        {
            "sProcessing":   "{$module.txt.lbl.processing}",
            "sLengthMenu":   "{$module.txt.lbl.limit}",
            "sZeroRecords":  "{$module.txt.lbl.noRecords}",
            "sInfo":         "{$module.txt.lbl.info}",
            "sInfoEmpty":    "{$module.txt.lbl.recordNotFound}",
            "sInfoFiltered": "{$module.txt.lbl.numberOfRecords})",
            "sSearch":       "{$module.txt.lbl.find}",
            "oPaginate": {
                "sFirst":    "{$module.txt.lbl.first}",
                "sPrevious": "{$module.txt.lbl.prev}",
                "sNext":     "{$module.txt.lbl.next}",
                "sLast":     "{$module.txt.lbl.last}"
            }
        },
        {if $module.settings.editable}
        "aoColumnDefs": [
            { "bSortable": false, "aTargets": [ 0 ] },
            { "sWidth": "{$module.settings.column.width}", "aTargets": [ 0 ] }
        ],
        {/if}
        "bPaginate": {$module.settings.paginate},
        "bSort": {$module.settings.sorting},
        "iTabIndex": {$module.tabIndex},
        "sPaginationType": "{$module.settings.paginationType}", // full_numbers, two_button, bootstrap*
        "bFilter": {$module.settings.filter},
        "bInfo": {$module.settings.info},
        "bLengthChange": {$module.settings.lengthChange},
        //   "bProcessing": {$module.settings.processing},
        {if $module.settings.ajax}
        "bServerSide": {$module.settings.ajax},
        "iDeferLoading": false{*$module.settings.row.count*},
        "iDisplayLength": {$module.settings.row.show},
        "iDisplayStart": {$module.settings.row.start},
        "sAjaxSource": "{$module.settings.link.source}",
        "sServerMethod": "{$module.settings.method}", // POST*, GET
        "bDeferRender": true,
        "fnServerParams": function(aoData){
            aoData.push(
                    {
                        "name": "security", "value": "{$module.settings.security}"
                    },
                    {
                        "name": "code", "value": "{$module.code}"
                    }
            );
        },
        {/if}
        {if $module.settings.viewport}
        "sScrollX": {$module.settings.table.width},
        "sScrollY": {$module.settings.table.height},
        "bScrollCollapse": {$module.settings.table.scrollCollapse},
        {/if}
        "bStateSave": {$module.settings.state}
    }){if $module.settings.rowReordering}
            .rowReordering({if $module.settings.orderWithAjax}{ "sURL": "{$module.settings.link.order}", "sRequestType": "{$module.settings.method}"{/if} });
    {/if};
</script>